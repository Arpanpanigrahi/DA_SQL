SELECT * FROM ABC2
WINDOWS FUNCTION-
--RANK,DENSE_RANK,ROW_NUMBER,SUM,AVG,MIN,MAX,LAG,LEAD

SELECT *,
AVG(TOTAL_SALES) OVER (PARTITION BY PRODUCT ORDER BY PRODUCT) AS PRODUCT_TOTAL_SALES,
AVG(TOTAL_SALES) OVER (PARTITION BY TRANSACTION_YEAR ORDER BY PRODUCT) AS TXN_TOTAL_SALES,
AVG(TOTAL_SALES) OVER (PARTITION BY COUNTRY ORDER BY PRODUCT) AS COUNTRY_TOTAL_SALES
FROM ABC2

SELECT * FROM ABC2

SELECT *,RANK() OVER (PARTITION BY PRODUCT,TRANSACTION_YEAR ORDER BY TOTAL_SALES DESC) AS RANKING
FROM ABC2

SELECT *,DENSE_RANK() OVER (PARTITION BY PRODUCT,TRANSACTION_YEAR ORDER BY TOTAL_SALES DESC) AS RANKING
FROM ABC2

SELECT *,ROW_NUMBER() OVER ( ORDER BY PRODUCT) AS SL_NUM
FROM ABC2

SELECT *,ROW_NUMBER() OVER (PARTITION BY PRODUCT,TRANSACTION_YEAR ORDER BY TOTAL_SALES DESC) AS RANKING
FROM ABC2

--TOP 2 REVENUE CONTRIBUTING PRODUCT WITH THEIR YEAR
WITH ABC AS
(
SELECT *,DENSE_RANK() OVER (PARTITION BY PRODUCT,TRANSACTION_YEAR ORDER BY TOTAL_SALES DESC) AS RANKING
FROM ABC2
)
SELECT * FROM ABC 
WHERE RANKING =1

SELECT * FROM ABC2

SELECT * FROM BOOK15

WITH ABC AS
(
SELECT *,LAG(DOV,1) OVER (PARTITION BY [NAME] ORDER BY DOV) AS PREV_DATE,
SUM(SPENT) OVER (PARTITION BY NAME ORDER BY NAME) AS TOTAL_SPENT
FROM BOOK15
)
, ABC2 AS
(
SELECT *, COALESCE(DATEDIFF(DAY,PREV_DATE,DOV),0) AS DAYS_GAP
FROM ABC
)
SELECT *,AVG(DAYS_GAP) OVER (PARTITION BY NAME ORDER BY NAME) AS AVG_DAY_VISIT
FROM ABC2








